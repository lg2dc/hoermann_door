esphome:
  name: garage-door
  platform: ESP8266
  board: esp01_1m
  includes:
    - garage-door-includes

wifi:
  networks:
  - ssid: !secret wifi_name_1
    password: !secret wifi_key_1
  - ssid: !secret wifi_name_2
    password: !secret wifi_key_2

#  # Enable fallback hotspot (captive portal) in case wifi connection fails
#  ap:
#    ssid: "ESPHome Hotspot"
#    password: !secret wifi_key_1
#             
#captive_portal:

# Enable Home Assistant API
api:
  password: !secret api_password
  encryption:
    key: !secret garage_door_key

ota:
  password: !secret ota_password

# Enable logging
logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: False
  baud_rate: 0 # Disable Serial logging to avoid conflict with uart bus on UART0

uart:
  id: uart_bus
  tx_pin: GPIO15
  rx_pin: GPIO13
  baud_rate: 19200

custom_component:
  - id: garage_door_comp
    lambda: |-
      auto door_component = new GarageDoorComponent(id(uart_bus));
      return {door_component};

text_sensor:
  - platform: custom
    id: garagedoor
    lambda: |-
      return {garage_door_get_comp(garage_door_comp)->state_sensor};
    text_sensors:
      name: "esp_garage_door_state"

cover:
  - platform: template
    id: garage_door_template
    name: "esp_garage_door"
    device_class: garage
    open_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_open();
      - logger.log: "Template Garage open"
    close_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_close();
      - logger.log: "Template Garage close"
    stop_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_stop();
      - logger.log: "Template Garage stop"
    lambda: |-
      auto state = garage_door_get_comp(garage_door_comp)->state_sensor->state.c_str();
      if (strcmp(state, "closed") == 0) {
        return COVER_CLOSED;
      } else if (strcmp(state, "opening") == 0 || strcmp(state, "closing") == 0) {
        return {};
      } else {
        return COVER_OPEN;
      }

switch:
- platform: custom
  lambda: |-
    return {
      garage_door_get_comp(garage_door_comp)->venting_switch,
      garage_door_get_comp(garage_door_comp)->light_switch
    };
  switches:
    - name: "esp_garage_door_venting_position"
    - name: "esp_garage_door_light_toggle"
